{"version":3,"file":"utils-hash.js","names":["_ohash","require","crypto","_interopRequireWildcard","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","jsSha256","input","Promise","resolve","sha256","nativeSha256","data","TextEncoder","encode","hashBuffer","subtle","digest","hash","Array","prototype","map","Uint8Array","x","toString","slice","join","canUseCryptoSubtle","exports","defaultHashSha256"],"sources":["../../../../src/plugins/utils/utils-hash.ts"],"sourcesContent":["import { sha256 } from 'ohash';\nimport type { HashFunction } from '../../types/index.d.ts';\nimport * as crypto from 'crypto';\n\n/**\n * TODO in the future we should no longer provide a\n * fallback to crypto.subtle.digest.\n * Instead users without crypto.subtle.digest support, should have to provide their own\n * hash function.\n */\nexport function jsSha256(input: string) {\n    return Promise.resolve(sha256(input));\n}\n\nexport async function nativeSha256(input: string) {\n    const data = new TextEncoder().encode(input);\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n    /**\n     * @link https://jameshfisher.com/2017/10/30/web-cryptography-api-hello-world/\n     */\n    const hash = Array.prototype.map.call(\n        new Uint8Array(hashBuffer),\n        x => (('00' + x.toString(16)).slice(-2))\n    ).join('');\n    return hash;\n}\n\n\nexport const canUseCryptoSubtle = typeof crypto !== 'undefined' &&\n    typeof crypto.subtle !== 'undefined' &&\n    typeof crypto.subtle.digest === 'function';\n\n/**\n * Default hash method used to hash\n * strings and do equal comparisons.\n *\n * IMPORTANT: Changing the default hashing method\n * requires a BREAKING change!\n */\n\nexport const defaultHashSha256: HashFunction = canUseCryptoSubtle ? nativeSha256 : jsSha256;\n"],"mappings":";;;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,MAAA,GAAAC,uBAAA,CAAAF,OAAA;AAAiC,SAAAG,yBAAAC,CAAA,6BAAAC,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,CAAA,WAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA,KAAAF,CAAA;AAAA,SAAAF,wBAAAE,CAAA,EAAAE,CAAA,SAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAK,OAAA,EAAAL,CAAA,QAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,OAAAQ,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,CAAA,SAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA,UAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA,YAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAe,GAAA,CAAAlB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAEjC;AACA;AACA;AACA;AACA;AACA;AACO,SAASW,QAAQA,CAACC,KAAa,EAAE;EACpC,OAAOC,OAAO,CAACC,OAAO,CAAC,IAAAC,aAAM,EAACH,KAAK,CAAC,CAAC;AACzC;AAEO,eAAeI,YAAYA,CAACJ,KAAa,EAAE;EAC9C,IAAMK,IAAI,GAAG,IAAIC,WAAW,CAAC,CAAC,CAACC,MAAM,CAACP,KAAK,CAAC;EAC5C,IAAMQ,UAAU,GAAG,MAAM/B,MAAM,CAACgC,MAAM,CAACC,MAAM,CAAC,SAAS,EAAEL,IAAI,CAAC;EAC9D;AACJ;AACA;EACI,IAAMM,IAAI,GAAGC,KAAK,CAACC,SAAS,CAACC,GAAG,CAAClB,IAAI,CACjC,IAAImB,UAAU,CAACP,UAAU,CAAC,EAC1BQ,CAAC,IAAK,CAAC,IAAI,GAAGA,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAC1C,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;EACV,OAAOR,IAAI;AACf;AAGO,IAAMS,kBAAkB,GAAAC,OAAA,CAAAD,kBAAA,GAAG,OAAO3C,MAAM,KAAK,WAAW,IAC3D,OAAOA,MAAM,CAACgC,MAAM,KAAK,WAAW,IACpC,OAAOhC,MAAM,CAACgC,MAAM,CAACC,MAAM,KAAK,UAAU;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,IAAMY,iBAA+B,GAAAD,OAAA,CAAAC,iBAAA,GAAGF,kBAAkB,GAAGhB,YAAY,GAAGL,QAAQ","ignoreList":[]}